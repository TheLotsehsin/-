{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { loginRules } from './loginRule';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const loginForm = ref({\n      username: 'admin',\n      password: '123456'\n    });\n    const rules = ref(loginRules);\n    const passwordType = ref('password');\n    const formRef = ref(null);\n    const onChangePwdType = () => {\n      passwordType.value === 'password' ? passwordType.value = 'text' : passwordType.value = 'password';\n    };\n    const handleLogin = async () => {\n      formRef.value.validate(valid => {\n        if (valid) {\n          store.dispatch('user/login', loginForm.value);\n        } else {\n          return false;\n        }\n      });\n    };\n    const __returned__ = {\n      store,\n      loginForm,\n      rules,\n      passwordType,\n      formRef,\n      onChangePwdType,\n      handleLogin,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get loginRules() {\n        return loginRules;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useStore","loginRules","store","loginForm","username","password","rules","passwordType","formRef","onChangePwdType","value","handleLogin","validate","valid","dispatch"],"sources":["E:/Java Project/Java item/graduation_design/src/views/Login.vue"],"sourcesContent":["<!--<template>-->\r\n<!--  <div class=\"login-page\">-->\r\n<!--    <el-card class=\"box-card\">-->\r\n<!--      <div slot=\"header\" class=\"clearfix\">-->\r\n<!--        <span class=\"login-title\">管理系统</span>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"login-form\">-->\r\n<!--        <el-form :model=\"form\" :rules=\"loginRules\" ref=\"loginForm\">-->\r\n<!--          <el-form-item prop=\"userName\">-->\r\n<!--            <el-input type=\"text\" v-model=\"form.userName\" auto-complete=\"off\" placeholder=\"请输入用户名\">-->\r\n<!--              <template slot=\"prepend\"><i style=\"font-size:20px\" class=\"el-icon-user\"></i></template>-->\r\n<!--            </el-input>-->\r\n<!--          </el-form-item>-->\r\n<!--          <el-form-item prop=\"passWord\">-->\r\n<!--            <el-input type=\"text\" v-model=\"form.passWord\" auto-complete=\"off\" placeholder=\"请输入密码\">-->\r\n<!--              <template slot=\"prepend\"><i style=\"font-size:20px\" class=\"el-icon-key\"></i></template>-->\r\n<!--            </el-input>-->\r\n<!--          </el-form-item>-->\r\n<!--          <el-form-item>-->\r\n<!--            <el-button style=\"width:100%;\" type=\"primary\" @click=\"handleLogin\" :loading=\"loading\">登录</el-button>-->\r\n<!--          </el-form-item>-->\r\n<!--        </el-form>-->\r\n<!--      </div>-->\r\n<!--    </el-card>-->\r\n<!--  </div>-->\r\n<!--</template>-->\r\n\r\n<!--<script>-->\r\n\r\n<!--  export default {-->\r\n<!--    name: 'Login',-->\r\n<!--    data(){-->\r\n<!--      return {-->\r\n<!--        loading: false,-->\r\n<!--        form:{-->\r\n<!--          userName: '',-->\r\n<!--          passWord: ''-->\r\n<!--        },-->\r\n<!--        loginRules:{-->\r\n<!--          userName: [-->\r\n<!--            { required: true, message: '请输入账户', trigger: 'blur' },-->\r\n<!--          ],-->\r\n<!--          passWord: [-->\r\n<!--            { required: true, message: '请输入密码', trigger: 'blur'}-->\r\n<!--          ]-->\r\n<!--        }-->\r\n<!--      }-->\r\n<!--    },-->\r\n<!--    methods:{-->\r\n<!--      handleLogin(){-->\r\n<!--        this.$refs.loginForm.validate().then(()=>{-->\r\n<!--          this.loading = true;-->\r\n\r\n<!--          //模拟异步请求后台接口 登录操作-->\r\n<!--          setTimeout(()=>{-->\r\n<!--            this.$router.push('/home');-->\r\n<!--            this.loading = false;-->\r\n<!--          }, 1000)-->\r\n<!--        }).catch((error=>{-->\r\n<!--          this.$message({-->\r\n<!--            message: '输入错误！',-->\r\n<!--            type: 'warning'-->\r\n<!--          });-->\r\n<!--        }))-->\r\n<!--      }-->\r\n<!--    }-->\r\n<!--  }-->\r\n<!--</script>-->\r\n\r\n<!--<style scoped>-->\r\n<!--  .login-page{-->\r\n<!--    background-image: linear-gradient(180deg, #2af598 0%, #009efd 100%);-->\r\n<!--    height: 100vh;-->\r\n<!--    display: flex;-->\r\n<!--    justify-content: center;-->\r\n<!--    align-items: center;-->\r\n<!--  }-->\r\n\r\n<!--  .login-title{-->\r\n<!--    font-size: 20px;-->\r\n<!--  }-->\r\n\r\n<!--  .box-card {-->\r\n<!--    width: 375px;-->\r\n<!--  }-->\r\n\r\n<!--</style>-->\r\n\r\n<template>\r\n  <div class=\"login-container\">\r\n    <el-form\r\n            ref=\"formRef\"\r\n            :model=\"loginForm\"\r\n            class=\"login-form\"\r\n            autocomplete=\"on\"\r\n            :rules=\"rules\"\r\n    >\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">{{ $t('login.title') }}</h3>\r\n      </div>\r\n      <el-form-item prop=\"username\">\r\n        <!-- <el-icon :size=\"20\" class=\"svg-container\">\r\n          <edit />\r\n        </el-icon> -->\r\n        <svg-icon class=\"svg-container\" icon=\"user\"></svg-icon>\r\n        <el-input v-model=\"loginForm.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <svg-icon class=\"svg-container\" icon=\"password\"></svg-icon>\r\n        <el-input v-model=\"loginForm.password\" :type=\"passwordType\"></el-input>\r\n        <span class=\"show-pwd\" @click=\"onChangePwdType\">\r\n          <span class=\"svg-container\">\r\n            <svg-icon\r\n                    :icon=\"passwordType === 'password' ? 'eye' : 'eye-open'\"\r\n            />\r\n          </span>\r\n        </span>\r\n      </el-form-item>\r\n      <el-button type=\"primary\" class=\"login-button\" @click=\"handleLogin\">{{\r\n        $t('login.btnTitle')\r\n        }}</el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import { ref } from 'vue'\r\n  import { useStore } from 'vuex'\r\n  import { loginRules } from './loginRule'\r\n  const store = useStore()\r\n\r\n  const loginForm = ref({\r\n    username: 'admin',\r\n    password: '123456'\r\n  })\r\n  const rules = ref(loginRules)\r\n  const passwordType = ref('password')\r\n  const formRef = ref(null)\r\n  const onChangePwdType = () => {\r\n    passwordType.value === 'password'\r\n            ? (passwordType.value = 'text')\r\n            : (passwordType.value = 'password')\r\n  }\r\n  const handleLogin = async () => {\r\n    formRef.value.validate((valid) => {\r\n      if (valid) {\r\n        store.dispatch('user/login', loginForm.value)\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  $bg: #2d3a4b;\r\n  $dark_gray: #889aa4;\r\n  $light_gray: #eee;\r\n  $cursor: #fff;\r\n\r\n  .login-container {\r\n    min-height: 100%;\r\n    width: 100%;\r\n    background-color: $bg;\r\n    overflow: hidden;\r\n\r\n    .login-form {\r\n      position: relative;\r\n      width: 520px;\r\n      max-width: 100%;\r\n      padding: 160px 35px 0;\r\n      margin: 0 auto;\r\n      overflow: hidden;\r\n\r\n      ::v-deep .el-form-item {\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        background: rgba(0, 0, 0, 0.1);\r\n        border-radius: 5px;\r\n        color: #454545;\r\n      }\r\n\r\n      ::v-deep .el-input {\r\n        display: inline-block;\r\n        height: 47px;\r\n        width: 85%;\r\n\r\n        input {\r\n          background: transparent;\r\n          border: 0px;\r\n          -webkit-appearance: none;\r\n          border-radius: 0px;\r\n          padding: 12px 5px 12px 15px;\r\n          color: $light_gray;\r\n          height: 47px;\r\n          caret-color: $cursor;\r\n        }\r\n      }\r\n      .login-button {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n      }\r\n    }\r\n\r\n    .tips {\r\n      font-size: 16px;\r\n      line-height: 28px;\r\n      color: #fff;\r\n      margin-bottom: 10px;\r\n\r\n      span {\r\n        &:first-of-type {\r\n          margin-right: 16px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .svg-container {\r\n      padding: 6px 5px 6px 15px;\r\n      color: $dark_gray;\r\n      vertical-align: middle;\r\n      display: inline-block;\r\n    }\r\n\r\n    .title-container {\r\n      position: relative;\r\n\r\n      .title {\r\n        font-size: 26px;\r\n        color: $light_gray;\r\n        margin: 0px auto 40px auto;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n\r\n      ::v-deep .lang-select {\r\n        position: absolute;\r\n        top: 4px;\r\n        right: 0;\r\n        background-color: white;\r\n        font-size: 22px;\r\n        padding: 4px;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .show-pwd {\r\n      // position: absolute;\r\n      // right: 10px;\r\n      // top: 7px;\r\n      font-size: 16px;\r\n      color: $dark_gray;\r\n      cursor: pointer;\r\n      user-select: none;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":"AA8HE,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,UAAU,QAAQ,aAAa;;;;;;;IACxC,MAAMC,KAAK,GAAGF,QAAQ,EAAE;IAExB,MAAMG,SAAS,GAAGJ,GAAG,CAAC;MACpBK,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGP,GAAG,CAACE,UAAU,CAAC;IAC7B,MAAMM,YAAY,GAAGR,GAAG,CAAC,UAAU,CAAC;IACpC,MAAMS,OAAO,GAAGT,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMU,eAAe,GAAGA,CAAA,KAAM;MAC5BF,YAAY,CAACG,KAAK,KAAK,UAAU,GACtBH,YAAY,CAACG,KAAK,GAAG,MAAM,GAC3BH,YAAY,CAACG,KAAK,GAAG,UAAW;IAC7C,CAAC;IACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BH,OAAO,CAACE,KAAK,CAACE,QAAQ,CAAEC,KAAK,IAAK;QAChC,IAAIA,KAAK,EAAE;UACTX,KAAK,CAACY,QAAQ,CAAC,YAAY,EAAEX,SAAS,CAACO,KAAK,CAAC;QAC/C,CAAC,MAAM;UACL,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
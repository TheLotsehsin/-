{"ast":null,"code":"import { login } from \"@/api/login\";\nimport { setToken } from \"@/request/auth\";\nexport default {\n  name: \"login\",\n  data() {\n    return {\n      form: {\n        password: \"\",\n        username: \"\"\n      },\n      checked: false,\n      rules: {\n        username: [{\n          required: true,\n          message: \"ËØ∑ËæìÂÖ•Áî®Êà∑Âêç\",\n          trigger: \"blur\"\n        }, {\n          max: 10,\n          message: \"‰∏çËÉΩÂ§ß‰∫é10‰∏™Â≠óÁ¨¶\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"ËØ∑ËæìÂÖ•ÂØÜÁ†Å\",\n          trigger: \"blur\"\n        }, {\n          max: 10,\n          message: \"‰∏çËÉΩÂ§ß‰∫é10‰∏™Â≠óÁ¨¶\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted() {\n    if (localStorage.getItem(\"news\")) {\n      this.form = JSON.parse(localStorage.getItem(\"news\"));\n      this.checked = true;\n    }\n  },\n  methods: {\n    login(form) {\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          login(this.form).then(res => {\n            if (res.code === 200) {\n              setToken(res.data.token);\n              localStorage.setItem(\"USERNAME\", res.data.username);\n              this.$message({\n                message: \"ÁôªÂΩïÊàêÂäüÂï¶\",\n                type: \"success\",\n                showClose: true\n              });\n              this.$router.replace(\"/\");\n            } else {\n              this.$message({\n                message: \"Ë¥¶Êà∑ÂêçÊàñÂØÜÁ†ÅÈîôËØØ\",\n                type: \"error\",\n                showClose: true\n              });\n            }\n          }).catch(err => {\n            this.$message({\n              message: \"Ë¥¶Êà∑ÂêçÊàñÂØÜÁ†ÅÈîôËØØ\",\n              type: \"error\",\n              showClose: true\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    remenber(data) {\n      this.checked = data;\n      if (this.checked) {\n        localStorage.setItem(\"news\", JSON.stringify(this.form));\n      } else {\n        localStorage.removeItem(\"news\");\n      }\n    },\n    forgetpas() {\n      this.$message({\n        type: \"info\",\n        message: \"ÂäüËÉΩÂ∞öÊú™ÂºÄÂèëÈ¢ùüò•\",\n        showClose: true\n      });\n    },\n    register() {}\n  }\n};","map":{"version":3,"names":["login","setToken","name","data","form","password","username","checked","rules","required","message","trigger","max","mounted","localStorage","getItem","JSON","parse","methods","$refs","validate","valid","then","res","code","token","setItem","$message","type","showClose","$router","replace","catch","err","remenber","stringify","removeItem","forgetpas","register"],"sources":["E:\\Java Project\\Java item\\graduation_design\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"loginbody\">\n    <div class=\"logindata\">\n      <div class=\"logintext\">\n        <h2>Welcome</h2>\n      </div>\n      <div class=\"formdata\">\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\">\n          <el-form-item prop=\"username\">\n            <el-input\n                    v-model=\"form.username\"\n                    clearable\n                    placeholder=\"ËØ∑ËæìÂÖ•Ë¥¶Âè∑\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item prop=\"password\">\n            <el-input\n                    v-model=\"form.password\"\n                    clearable\n                    placeholder=\"ËØ∑ËæìÂÖ•ÂØÜÁ†Å\"\n                    show-password\n            ></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div class=\"tool\">\n        <div>\n          <el-checkbox v-model=\"checked\" @change=\"remenber\"\n          >ËÆ∞‰ΩèÂØÜÁ†Å</el-checkbox\n          >\n        </div>\n        <div>\n          <span class=\"shou\" @click=\"forgetpas\">ÂøòËÆ∞ÂØÜÁ†ÅÔºü</span>\n        </div>\n      </div>\n      <div class=\"butt\">\n        <el-button type=\"primary\" @click.native.prevent=\"login('form')\"\n        >ÁôªÂΩï</el-button\n        >\n        <el-button class=\"shou\" @click=\"register\">Ê≥®ÂÜå</el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { login } from \"@/api/login\";\n  import { setToken } from \"@/request/auth\";\n\n  export default {\n    name: \"login\",\n    data() {\n      return {\n        form: {\n          password: \"\",\n          username: \"\",\n        },\n        checked: false,\n        rules: {\n          username: [\n            { required: true, message: \"ËØ∑ËæìÂÖ•Áî®Êà∑Âêç\", trigger: \"blur\" },\n            { max: 10, message: \"‰∏çËÉΩÂ§ß‰∫é10‰∏™Â≠óÁ¨¶\", trigger: \"blur\" },\n          ],\n          password: [\n            { required: true, message: \"ËØ∑ËæìÂÖ•ÂØÜÁ†Å\", trigger: \"blur\" },\n            { max: 10, message: \"‰∏çËÉΩÂ§ß‰∫é10‰∏™Â≠óÁ¨¶\", trigger: \"blur\" },\n          ],\n        },\n      };\n    },\n    mounted() {\n      if(localStorage.getItem(\"news\")){\n        this.form=JSON.parse(localStorage.getItem(\"news\"))\n        this.checked=true\n      }\n    },\n    methods: {\n      login(form) {\n        this.$refs[form].validate((valid) => {\n          if (valid) {\n            login(this.form)\n                    .then((res) => {\n                      if (res.code === 200) {\n                        setToken(res.data.token);\n                        localStorage.setItem(\"USERNAME\", res.data.username);\n                        this.$message({\n                          message: \"ÁôªÂΩïÊàêÂäüÂï¶\",\n                          type: \"success\",\n                          showClose: true,\n                        });\n                        this.$router.replace(\"/\");\n                      } else {\n                        this.$message({\n                          message: \"Ë¥¶Êà∑ÂêçÊàñÂØÜÁ†ÅÈîôËØØ\",\n                          type: \"error\",\n                          showClose: true,\n                        });\n                      }\n                    })\n                    .catch((err) => {\n                      this.$message({\n                        message: \"Ë¥¶Êà∑ÂêçÊàñÂØÜÁ†ÅÈîôËØØ\",\n                        type: \"error\",\n                        showClose: true,\n                      });\n                    });\n          } else {\n            return false;\n          }\n        });\n      },\n      remenber(data){\n        this.checked=data\n        if(this.checked){\n          localStorage.setItem(\"news\",JSON.stringify(this.form))\n        }else{\n          localStorage.removeItem(\"news\")\n        }\n      },\n      forgetpas() {\n        this.$message({\n          type:\"info\",\n          message:\"ÂäüËÉΩÂ∞öÊú™ÂºÄÂèëÈ¢ùüò•\",\n          showClose:true\n        })\n      },\n      register() {},\n    },\n  };\n</script>\n\n<style scoped>\n  .loginbody {\n    width: 100%;\n    height: 100%;\n    min-width: 1000px;\n    background-image: url(\"../assets/login2.jpg\");\n    background-size: 100% 100%;\n    background-position: center center;\n    overflow: auto;\n    background-repeat: no-repeat;\n    position: fixed;\n    line-height: 100%;\n    padding-top: 150px;\n  }\n\n  .logintext {\n    margin-bottom: 20px;\n    line-height: 50px;\n    text-align: center;\n    font-size: 30px;\n    font-weight: bolder;\n    color: white;\n    text-shadow: 2px 2px 4px #000000;\n  }\n\n  .logindata {\n    width: 400px;\n    height: 300px;\n    transform: translate(-50%);\n    margin-left: 50%;\n  }\n\n  .tool {\n    display: flex;\n    justify-content: space-between;\n    color: #606266;\n  }\n\n  .butt {\n    margin-top: 10px;\n    text-align: center;\n  }\n\n  .shou {\n    cursor: pointer;\n    color: #606266;\n  }\n\n  /*ui*/\n  /* /deep/ .el-form-item__label {\n    font-weight: bolder;\n    font-size: 15px;\n    text-align: left;\n  }\n\n  /deep/ .el-button {\n    width: 100%;\n    margin-bottom: 10px;\n\n  } */\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}